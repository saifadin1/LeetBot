name: Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '9.0'
  PUBLISH_DIR: publish

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Show repo tree (debug)
        run: |
          echo "Listing repo root:"
          ls -la
          echo "Listing LeetBot folder:"
          ls -la LeetBot || true

      - name: Restore and build (LeetBot)
        working-directory: LeetBot
        run: |
          # if you have a solution file, prefer restore/build against it:
          if [ -f "LeetBot.sln" ]; then
            dotnet restore LeetBot.sln
            dotnet build LeetBot.sln --configuration Release --no-restore
          else
            # fallback to csproj
            dotnet restore LeetBot.csproj
            dotnet build LeetBot.csproj --configuration Release --no-restore
          fi

      - name: Publish (LeetBot)
        working-directory: LeetBot
        run: |
          if [ -f "LeetBot.sln" ]; then
            dotnet publish LeetBot.sln -c Release -o ${{ env.PUBLISH_DIR }}
          else
            dotnet publish LeetBot.csproj -c Release -o ${{ env.PUBLISH_DIR }}
          fi

      - name: Prepare SSH key
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          printf "Host *\n  StrictHostKeyChecking no\n" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Copy files to EC2 (rsync)
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PORT: ${{ secrets.EC2_PORT || '22' }}
          APP_DIR: ${{ secrets.APP_DIR || '/home/${{ secrets.EC2_USER }}/myapp' }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "mkdir -p $APP_DIR"
          rsync -az -e "ssh -i ~/.ssh/id_rsa -p $PORT" ${{ env.PUBLISH_DIR }}/ $USER@$HOST:$APP_DIR/

      - name: Restart application on EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PORT: ${{ secrets.EC2_PORT || '22' }}
          APP_DIR: ${{ secrets.APP_DIR || '/home/${{ secrets.EC2_USER }}/myapp' }}
        run: |
          ssh -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "pkill -f 'dotnet LeetBot.dll' || true; nohup dotnet $APP_DIR/LeetBot.dll > $APP_DIR/log.txt 2>&1 &"
