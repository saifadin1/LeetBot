name: Build & Deploy to EC2

on:
  push:
    branches: [ "main" ]

env:
  DOTNET_VERSION: '9.0'
  PUBLISH_DIR: publish

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Show repo tree (debug)
        run: |
          echo "Repository root:"
          ls -la
          echo "LeetBot folder contents:"
          ls -la LeetBot || true

      - name: Restore and build (LeetBot)
        working-directory: LeetBot
        run: |
          if [ -f "LeetBot.sln" ]; then
            dotnet restore LeetBot.sln
            dotnet build LeetBot.sln --configuration Release --no-restore
          else
            dotnet restore LeetBot.csproj
            dotnet build LeetBot.csproj --configuration Release --no-restore
          fi

      - name: Publish (LeetBot)
        working-directory: LeetBot
        run: |
          if [ -f "LeetBot.sln" ]; then
            dotnet publish LeetBot.sln -c Release -o ${{ env.PUBLISH_DIR }}
          else
            dotnet publish LeetBot.csproj -c Release -o ${{ env.PUBLISH_DIR }}
          fi

      - name: Verify publish output (debug & fail early)
        env:
          SRC: ${{ github.workspace }}/LeetBot/${{ env.PUBLISH_DIR }}
        run: |
          echo "Expecting publish folder at: $SRC"
          if [ ! -d "$SRC" ]; then
            echo "ERROR: publish directory not found: $SRC"
            echo "Listing possible publish locations:"
            ls -la "${{ github.workspace }}" || true
            ls -la "${{ github.workspace }}/LeetBot" || true
            exit 1
          fi
          echo "Publish folder exists. Contents:"
          ls -la "$SRC"

      - name: Prepare SSH key
        env:
          SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          printf "Host *\n  StrictHostKeyChecking no\n" >> ~/.ssh/config
          chmod 600 ~/.ssh/config

      - name: Copy files to EC2 (rsync)
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PORT: ${{ secrets.EC2_PORT || '22' }}
          APP_DIR: ${{ secrets.APP_DIR || '/home/ubuntu/LeetBot' }}
          SRC: ${{ github.workspace }}/LeetBot/${{ env.PUBLISH_DIR }}
        run: |
          echo "Copying from $SRC to $USER@$HOST:$APP_DIR"
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "mkdir -p $APP_DIR"
          rsync -az --delete -e "ssh -i ~/.ssh/id_rsa -p $PORT -o StrictHostKeyChecking=no" "$SRC"/ $USER@$HOST:$APP_DIR/

      - name: Stop previous application
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PORT: ${{ secrets.EC2_PORT || '22' }}
        run: |
          echo "=== Verifying SSH setup ==="
          ls -la ~/.ssh/
          echo "SSH config:"
          cat ~/.ssh/config || echo "No config file"
          
          echo "=== Testing SSH connection ==="
          ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "echo 'Connection successful'" 2>&1 || echo "SSH failed with exit code $?"
          
          echo "=== Stopping previous process ==="
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "
            pgrep -f 'dotnet LeetBot.dll' && pkill -f 'dotnet LeetBot.dll' && echo 'Process stopped' || echo 'No process found'
          " || true

      - name: Start new application
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          PORT: ${{ secrets.EC2_PORT || '22' }}
          APP_DIR: ${{ secrets.APP_DIR || '/home/ubuntu/LeetBot' }}
        run: |
          echo "=== Starting new process ==="
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -p $PORT $USER@$HOST "
            echo '1. Navigating to app directory...'
            cd $APP_DIR
            
            echo '2. Current directory:'
            pwd
            
            echo '3. Directory contents:'
            ls -la
            
            echo '4. Checking if DLL exists:'
            ls -la LeetBot.dll || echo 'DLL not found!'
            
            echo '5. Starting application...'
            nohup dotnet LeetBot.dll > log.txt 2>&1 &
            
            echo '6. Waiting for process to start...'
            sleep 3
            
            echo '7. Checking running processes:'
            pgrep -f 'dotnet LeetBot.dll' && echo 'SUCCESS: Application is running!' || echo 'FAILED: Application did not start'
            
            echo '8. Checking log file:'
            ls -la log.txt || echo 'Log file not created'
          "
